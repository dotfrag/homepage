---
import type { InferGetStaticPropsType } from "astro";
import { getCollection } from "astro:content";
import BaseLayout from "@layouts/BaseLayout.astro";
import PostCard from "@components/PostCard.astro";
import { categories } from "src/consts";

export async function getStaticPaths() {
	const posts = (await getCollection("blog")).sort(
		(a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf(),
	);
	const tags = categories.map((tag) => ({ params: { tag }, props: { posts } }));
	return tags;
}

type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const { tag } = Astro.params;
const { posts } = Astro.props;

const path = Astro.url.pathname.split("/");
let category: string | null = null;
let categoryTitle: string | null = null;
if (path.length > 2) {
	category = path[2];
	categoryTitle = category[0].toUpperCase() + category.substring(1);
}

const title = tag[0].toUpperCase() + tag.slice(1);
const filteredPosts = posts.filter((post) => post.id.startsWith(tag));
---

<BaseLayout {title}>
	<div class="grid gap-8">
		<div
			data-pagefind-ignore
			class="text-overlay-1 flex items-center gap-2 font-mono text-sm"
		>
			<a href="/" class="hover:text-text transition">Home</a>
			<span class="text-xs select-none">&gt;</span>
			<a href={`/blog`} class="hover:text-text transition">Blog</a>
			<span class="text-xs select-none">&gt;</span>
			{
				category !== null && (
					<a href={`/blog/${category}`} class="hover:text-text transition">
						{categoryTitle}
					</a>
				)
			}
		</div>

		<div class="grid gap-4 text-center text-balance">
			<h1 class="text-3xl font-bold">{tag}</h1>
		</div>

		<div class="grid gap-4">
			{
				filteredPosts.map((post) => (
					<PostCard
						id={post.id}
						title={post.data.title}
						description={post.data.description}
						date={post.data.pubDate}
					/>
				))
			}
		</div>
	</div>
</BaseLayout>
